import Graph from "react-graph-vis";

import { chaining } from "../../../utils/report-interface";
import { severityColor } from "../../../utils/severityColor";

interface VulnerabilityGraphProps {
  chainings: chaining[];
  severity: string;
}

const VulnerabilityGraph: React.FC<VulnerabilityGraphProps> = ({
  chainings,
  severity,
}) => {
  const vulnerabilityOptions = {
    color: severityColor(severity),
    font: { color: severityColor(severity) },
  };

  const graph = () => {
    let nodes: any = [];
    let edges: any = [];

    nodes.push({ id: chainings[0].source, label: chainings[0].source }); // user project node;
    nodes.push({
      id: chainings[chainings.length - 1].target,
      label: chainings[chainings.length - 1].target,
      color: vulnerabilityOptions.color,
      font: vulnerabilityOptions.font,
    }); // vulnerability node;

    edges.push({
      from: chainings[chainings.length - 1].source,
      to: chainings[chainings.length - 1].target,
      color: vulnerabilityOptions.color,
    });

    for (let i = 1; i < chainings.length; i++) {
      nodes.push({ id: chainings[i].source, label: chainings[i].source });
      edges.push({
        from: chainings[i - 1].source,
        to: chainings[i - 1].target,
      });
    }

    return { nodes, edges };
  };

  const options = {
    layout: {
      hierarchical: {
        enabled: true,
        direction: "LR",
        treeSpacing: 50,
        // levelSeparation: 100,
      },
    },
    edges: {
      chosen: false,
      physics: false,
      width: 1,
    },
    nodes: {
      chosen: false,
      fixed: false,
      shape: "dot",
      size: 20,
      physics: false,
      borderWidth: 1,
      color: {
        border: "#000000",
        background: "#ffffff",
      },
      font: {
        size: 17,
      },
    },
    interaction: {
      // dragNodes: false,
      // dragView: false,
      zoomSpeed: 0.5,
    },
    height: "100px",
    // width: "260px"
  };

  return <Graph graph={graph()} options={options} />;
};

export default VulnerabilityGraph;
